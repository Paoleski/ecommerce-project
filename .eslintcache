[{"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\CheckoutProduct.js":"1","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\reducer.js":"2","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Home.js":"3","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Subtotal.js":"4","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\App.js":"5","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Header.js":"6","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Login.js":"7","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\index.js":"8","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Checkout.js":"9","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Product.js":"10","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\StateProvider.js":"11","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\firebase.js":"12","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\BurgerMenu.js":"13","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Payment.js":"14","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\utils\\axios.js":"15","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Orders.js":"16","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Order.js":"17","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\CreateAccount.js":"18"},{"size":1453,"mtime":1606886450609,"results":"19","hashOfConfig":"20"},{"size":1774,"mtime":1606886591748,"results":"21","hashOfConfig":"20"},{"size":1648,"mtime":1606709288001,"results":"22","hashOfConfig":"20"},{"size":1357,"mtime":1606690884735,"results":"23","hashOfConfig":"20"},{"size":2696,"mtime":1606886390219,"results":"24","hashOfConfig":"20"},{"size":2473,"mtime":1606778762981,"results":"25","hashOfConfig":"20"},{"size":1866,"mtime":1606884570342,"results":"26","hashOfConfig":"20"},{"size":394,"mtime":1606623450927,"results":"27","hashOfConfig":"20"},{"size":1141,"mtime":1606787859113,"results":"28","hashOfConfig":"20"},{"size":1391,"mtime":1606887203428,"results":"29","hashOfConfig":"20"},{"size":485,"mtime":1606353432413,"results":"30","hashOfConfig":"20"},{"size":634,"mtime":1606458536007,"results":"31","hashOfConfig":"20"},{"size":1975,"mtime":1606714800565,"results":"32","hashOfConfig":"20"},{"size":6117,"mtime":1606897664495,"results":"33","hashOfConfig":"20"},{"size":315,"mtime":1606805699591,"results":"34","hashOfConfig":"20"},{"size":1244,"mtime":1606788282210,"results":"35","hashOfConfig":"20"},{"size":1280,"mtime":1606787921124,"results":"36","hashOfConfig":"20"},{"size":3820,"mtime":1606787903485,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hhnyev",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\CheckoutProduct.js",["78"],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\reducer.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Home.js",[],["79","80"],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Subtotal.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\App.js",[],["81","82"],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Header.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Login.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\index.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Checkout.js",[],["83","84"],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Product.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\StateProvider.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\firebase.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\BurgerMenu.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Payment.js",["85","86"],"import { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport React, { useState, useEffect } from 'react';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport '../styles/payment.css';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport { getBasketTotal } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\nimport axios from '../utils/axios';\r\nimport { db } from '../firebase';\r\n\r\nfunction Payment() {\r\n  const [{ basket, user, profile }, dispatch] = useStateValue();\r\n\r\n  const history = useHistory();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [error, setError] = useState('');\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [processing, setProcessing] = useState('');\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   const getClientSecret = async () => {\r\n  //     const response = await axios({\r\n  //       method: 'post',\r\n  //       // strip expects the total in currencies subunits (use full cents 10$ === 10000)\r\n  //       url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\r\n  //     });\r\n  //     setClientSecret(response.data.clientSecret);\r\n  //   };\r\n\r\n  //   getClientSecret();\r\n  // }, [basket]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    // fancy stripe stuff\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n    const response = await axios({\r\n      method: 'post',\r\n      // strip expects the total in currencies subunits (use full cents 10$ === 10000)\r\n      url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\r\n    });\r\n    console.log(response.data.clientSecret)\r\n    // eslint-disable-next-line no-unused-vars\r\n    const payload = await stripe\r\n      .confirmCardPayment(response.data.clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        // paymentIntent = payment confirmation\r\n        db.collection('users')\r\n          .doc(user?.uid)\r\n          .collection('orders')\r\n          .doc(paymentIntent.id)\r\n          .set({\r\n            basket: basket,\r\n            amount: paymentIntent.amount,\r\n            created: paymentIntent.created,\r\n          }).catch(error => console.log(error))\r\n\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n          console.log('do i even exist?')\r\n        dispatch({\r\n          type: 'EMPTY_BASKET',\r\n        });\r\n\r\n        history.replace('/orders');\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    // listen for changes in the cardElement and display errors as the customer type card details\r\n    setError(event.error ? event.error.message : '');\r\n    if (event.empty || !event.complete || !clientSecret) {\r\n      setDisabled(true)\r\n    } else {\r\n      setDisabled(false)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <div className=\"payment__container\">\r\n        <h1>\r\n          Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\r\n        </h1>\r\n\r\n        <div className=\"payment__section\"></div>\r\n        <div className=\"payment__part2\">\r\n          {/* payment section -- review Items */}\r\n          <div className=\"payment__title\">\r\n            <h3>Review items and delivery</h3>\r\n          </div>\r\n          <div className=\"payment__items\">\r\n            {basket.map((item) => (\r\n              <CheckoutProduct\r\n                key={item.id + (Math.random() * 10).toFixed(0)}\r\n                id={item.id}\r\n                title={item.title}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"payment__part2\">\r\n          {/* payment section -- payment method */}\r\n\r\n          <div className=\"payment__title\">\r\n            <h3>Payment Method</h3>\r\n            {/* payment section -- delivery address */}\r\n            <div className=\"payment__address__container\">\r\n              <h3>Delivery address</h3>\r\n              <p>Address: {profile?.address}</p>\r\n              <p>Zip code: {profile?.zipCode}</p>\r\n              <p>\r\n                {profile?.city}, {profile?.stateUF}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"payment__details\">\r\n            {/* stripe magic will go here */}\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"payment__cardElementContainer\">\r\n                <CardElement\r\n                  onChange={handleChange}\r\n                  options={cardElementOptions}\r\n                />\r\n                  {error && <div>{error}</div>}\r\n              </div>\r\n\r\n              <div className=\"payment__priceContainer\">\r\n                <CurrencyFormat\r\n                  renderText={(value) => (\r\n                    <>\r\n                      <p>\r\n                        Order total ({basket.length} items):{' '}\r\n                        <strong>{value}</strong>\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                  decimalScale={2}\r\n                  value={getBasketTotal(basket)}\r\n                  displayType={'text'}\r\n                  thousandSeparator={true}\r\n                  prefix={'$'}\r\n                />\r\n            \r\n                <button className=\"payment__buyNowButton\" disabled={processing || disabled || succeeded}>\r\n                  <span>{processing ? <p>Processing</p> : 'Buy Now'}</span>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst cardElementOptions = {\r\n  // injecting css styles to card element(iframe)\r\n  style: {\r\n    base: {\r\n      color: 'black',\r\n      fontSize: '25px',\r\n      '::placeholder': {\r\n        color: 'black',\r\n      },\r\n    },\r\n    complete: {\r\n      color: 'green',\r\n    },\r\n  },\r\n  hidePostalCode:true,\r\n};\r\nexport default Payment;\r\n","C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\utils\\axios.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Orders.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\Order.js",[],"C:\\Users\\lucas\\Desktop\\JS\\ecommerce-project\\ecommerce-frontend\\src\\components\\CreateAccount.js",[],{"ruleId":"87","severity":1,"message":"88","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":12},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"91","replacedBy":"97"},{"ruleId":"93","replacedBy":"98"},{"ruleId":"87","severity":1,"message":"99","line":2,"column":27,"nodeType":"89","messageId":"90","endLine":2,"endColumn":36},{"ruleId":"87","severity":1,"message":"100","line":23,"column":24,"nodeType":"89","messageId":"90","endLine":23,"endColumn":39},"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],["101"],["102"],"'useEffect' is defined but never used.","'setClientSecret' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]